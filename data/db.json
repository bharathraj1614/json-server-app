{
  "Quiz-app-questions": [
    {
      "question": "Which is the most popular JavaScript framework?",
      "options": ["Angular", "React", "Svelte", "Vue"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which company invented React?",
      "options": ["Google", "Apple", "Netflix", "Facebook"],
      "correctOption": 3,
      "points": 10
    },
    {
      "question": "What's the fundamental building block of React apps?",
      "options": ["Components", "Blocks", "Elements", "Effects"],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "What's the name of the syntax we use to describe the UI in React components?",
      "options": ["FBJ", "Babel", "JSX", "ES2015"],
      "correctOption": 2,
      "points": 10
    },
    {
      "question": "How does data flow naturally in React apps?",
      "options": [
        "From parents to children",
        "From children to parents",
        "Both ways",
        "The developers decides"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "How to pass data into a child component?",
      "options": ["State", "Props", "PropTypes", "Parameters"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "When to use derived state?",
      "options": [
        "Whenever the state should not trigger a re-render",
        "Whenever the state can be synchronized with an effect",
        "Whenever the state should be accessible to all components",
        "Whenever the state can be computed from another state variable"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "What triggers a UI re-render in React?",
      "options": [
        "Running an effect",
        "Passing props",
        "Updating state",
        "Adding event listeners to DOM elements"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "When do we directly \"touch\" the DOM in React?",
      "options": [
        "When we need to listen to an event",
        "When we need to change the UI",
        "When we need to add styles",
        "Almost never"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "In what situation do we use a callback to update state?",
      "options": [
        "When updating the state will be slow",
        "When the updated state is very data-intensive",
        "When the state update should happen faster",
        "When the new state depends on the previous state"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "If we pass a function to useState, when will that function be called?",
      "options": [
        "On each re-render",
        "Each time we update the state",
        "Only on the initial render",
        "The first time we update the state"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Which hook to use for an API request on the component's initial render?",
      "options": ["useState", "useEffect", "useRef", "useReducer"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which variables should go into the useEffect dependency array?",
      "options": [
        "Usually none",
        "All our state variables",
        "All state and props referenced in the effect",
        "All variables needed for clean up"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "An effect will always run on the initial render.",
      "options": [
        "True",
        "It depends on the dependency array",
        "False",
        "In depends on the code in the effect"
      ],
      "correctOption": 0,
      "points": 30
    },
    {
      "question": "When will an effect run if it doesn't have a dependency array?",
      "options": [
        "Only when the component mounts",
        "Only when the component unmounts",
        "The first time the component re-renders",
        "Each time the component is re-rendered"
      ],
      "correctOption": 3,
      "points": 20
    }
  ],
  "cities": [
    {
      "id": "c97d",
      "cityName": "Oppdal",
      "country": "Norway",
      "emoji": "no",
      "date": "2025-04-09T14:40:42.498Z",
      "notes": "",
      "position": {
        "lat": "62.69379259217829",
        "lng": "9.919384036353431"
      }
    },
    {
      "id": "4c47",
      "cityName": "Nuuk",
      "country": "Greenland",
      "emoji": "gl",
      "date": "2025-04-09T14:40:55.970Z",
      "notes": "",
      "position": {
        "lat": "67.49920565271512",
        "lng": "-40.94134004539148"
      }
    },
    {
      "id": "14e2",
      "cityName": "Wood Buffalo",
      "country": "Canada",
      "emoji": "ca",
      "date": "2025-04-09T14:41:01.861Z",
      "notes": "",
      "position": {
        "lat": "59.20068023454637",
        "lng": "-110.18916638517659"
      }
    },
    {
      "id": "db39",
      "cityName": "Villa de Cos",
      "country": "Mexico",
      "emoji": "mx",
      "date": "2025-04-09T14:41:07.605Z",
      "notes": "",
      "position": {
        "lat": "23.30892180176072",
        "lng": "-102.3076724867495"
      }
    },
    {
      "id": "71c1",
      "cityName": "Bengaluru",
      "country": "India",
      "emoji": "in",
      "date": "2025-04-10T14:24:56.535Z",
      "notes": "Aruma da ",
      "position": {
        "lat": "12.942666287271544",
        "lng": "77.574462890625"
      }
    },
    {
      "id": "f9a9",
      "cityName": "Laccadive Sea",
      "country": "India",
      "emoji": "in",
      "date": "2025-04-10T14:26:43.066Z",
      "notes": "Noice",
      "position": {
        "lat": "12.854504625359606",
        "lng": "74.762989024293"
      }
    },
    {
      "id": "7c94",
      "cityName": "Pennagaram",
      "country": "India",
      "emoji": "in",
      "date": "2025-04-10T14:27:38.403Z",
      "notes": "",
      "position": {
        "lat": "12.103178538442178",
        "lng": "77.82214767210147"
      }
    },
    {
      "id": "1dbf",
      "cityName": "Kallakurichi",
      "country": "India",
      "emoji": "in",
      "date": "2025-04-14T09:54:35.833Z",
      "notes": "",
      "position": {
        "lat": "11.73565941427654",
        "lng": "78.961683564022"
      }
    }
  ],
  "userDatas": [
    {
      "name": "Walter White",
      "email": "cookingwithchemistry@methlab.com",
      "password": "HeisenbergRocks123",
      "avatar": "https://imgs.search.brave.com/3Eu2s8PuAo8xXYs_3pM4vj9wuUYa4_1bg0lCWeZZkvQ/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly91cGxv/YWQud2lraW1lZGlh/Lm9yZy93aWtpcGVk/aWEvZW4vdGh1bWIv/MC8wMy9XYWx0ZXJf/V2hpdGVfUzVCLnBu/Zy81MTJweC1XYWx0/ZXJfV2hpdGVfUzVC/LnBuZw",
      "id": "cookingwithchemistry@methlab.com"
    },
    {
      "name": "Tony Stark",
      "email": "geniusbillionaireplayboyphilanthropist@starkindustries.com",
      "password": "IronManLovesYou3000",
      "avatar": "https://avatarfiles.alphacoders.com/358/thumb-1920-358388.jpeg",
      "id": "geniusbillionaireplayboyphilanthropist@starkindustries.com"
    }
  ]
}
